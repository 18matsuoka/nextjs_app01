import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.scss'
import '../lib/firebase'
import {
  doc,
  getDoc,
  collection,
  query,
  onSnapshot,
  updateDoc,
  addDoc,
  QuerySnapshot,
} from "firebase/firestore";
import { db, auth } from "../lib/firebase"; //.envに書かれているfirebaseに接続するためのもの
import { signInWithRedirect, onAuthStateChanged, getRedirectResult, GoogleAuthProvider, signOut } from "firebase/auth";
import { useEffect, useState } from 'react';
import { Button, Card, CardActionArea, CardActions, CardContent, CardMedia, Typography } from '@mui/material';
import { useAuthState } from "react-firebase-hooks/auth";
import Link from 'next/link';
import Layout,{clickLogin,googleLogOut} from '../components/Layout';
import MainMenu from './MainMenu';
import Menu from './Menu';
import { useDispatch, useSelector } from 'react-redux'
import { isUserLoggedIn } from '../lib/redux/counterSlice';
import { useAppSelector, useAppDispatch } from '../lib/redux/hooks'



export default function Home() {

  // const count = useSelector((state) => state.userInfo.value);
  // const dispatch = useDispatch();

  const userState = useAppSelector((state) => state.userInfo.user)

  const dispatch = useAppDispatch();


  //user情報を持っているかどうか。
  const [user] = useAuthState(auth);

  useEffect(()=>{
    dispatch(isUserLoggedIn(user))
  })
  
  console.log(userState,"count");

  // useEffect(() => {
  //   getRedirectResult(auth)
  //     .then((result) => {
  //       console.log(result);
  //       if (result !== null) {
  //         const credential = GoogleAuthProvider.credentialFromResult(result);
  //         const token = credential?.accessToken;
  //         // The signed-in user info.
  //         console.log(user, "user");
  //       }
  //     }).catch((error) => {
  //       console.error(error);
  //       // Handle Errors here.
  //       const errorCode = error.code;
  //       const errorMessage = error.message;
  //       const email = error.email;
  //       // console.error(errorCode);
  //       // console.error(errorMessage);
  //       // console.error(email);
  //       // The AuthCredential type that was used.
  //       //const credential = GoogleAuthProvider.credentialFromError(error);
  //     });
  // }, []);

  return (
    <div>
      <Head>
        <title>Game Center App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        {!userState ? 
        <MainMenu />
        :<Menu />}
      </Layout>
    </div>
  )
}
